#!/usr/bin/with-contenv bash

FROZEN_DIR="${FTAG_DIR:-/frozen}"
CATEG_FILE="/config/qBittorrent/categories.json"
CATEGORY="${FTAG_DL_CATEGORY}"
CATEGORY_FZ="${FTAG_FZ_CATEGORY:-${CATEGORY_DL}_frozen}"

log() {
    echo "[mod-freezetag] ${1}" >&2
}
log_debug() {
    if [ "${DEBUG,,}" = 'true' ]; then
        echo "[mod-freezetag] (DEBUG) ${1}" >&2
    fi
}

# Check if DOCKER_MODS_DEBUG is set and true
if [[ "${DOCKER_MODS_DEBUG}" == "true" ]]; then
    log_debug "Starting svc-qbittorrent-freezetag..." >&2
fi

# Check if the FROZEN_DIR is empty
if [ ! -z "$(find ${FROZEN_DIR} -mindepth 1 -print -quit)" ]; then
    log "Error: The FROZEN_DIR (${FROZEN_DIR}) is not empty."
    log "Contents of ${FROZEN_DIR}:"
    ls -l "${FROZEN_DIR}" >&2
    exit 1
fi


init_checks(){
  # Enable or not init_checks
  if [ "${FTAG_SKIP_INIT_CHECKS,,}" = 'true' ]; then
    return 0
  fi


  ## Check 1 :
  # Check that the FROZEN_DIR exists
  if [ ! -d "${FROZEN_DIR}" ]; then
    err='true'
    log "Error: The FROZEN_DIR (${FROZEN_DIR}) does not exist."
  fi

  # Check 2 :
  # Check that it is empty
  if [ ! -z "$(find ${FROZEN_DIR} -mindepth 1 -print -quit)" ]; then
    err='true'
    log "Error: The FROZEN_DIR (${FROZEN_DIR}) is not empty."
  fi

  ## Check 4 :
  # Check that the required category exists
  SAVE_PATH=$(jq -r --arg category "$CATEGORY" '.[$category].save_path // empty' "$CATEG_FILE")
  if [ -n "$SAVE_PATH" ]; then
    log_debug "Category: $CATEGORY"
  else
    log "Error: '$CATEGORY' is not a valid category."
  fi

  ## Check 5
  # Check that the category path exists
  if [ ! -d "$SAVE_PATH" ]; then
    log "Error: The category path '$SAVE_PATH' does not exist."
  fi

  # Display Check results.
  # In case of failed checks, enter an empty loop : 
  #   -> exiting the script would make s6-overlay to re-run it.
  if [ -n "${err}" ];then
    log "Error: Init checks failed, exiting the mod. You can disable init checks by setting \"FTAG_SKIP_INIT_CHECKS=true\"."
    while :; do
      sleep 3600
    done
  else
    log "Init checks passed."
  fi
}

## 

# Create the freeze folder if it doesn't exist
if [ ! -d "${FROZEN_DIR}" ]; then
  log_debug "The FROZEN_DIR (${FROZEN_DIR}) does not exist. Creating it..."
  mkdir -p "${FROZEN_DIR}"
  if [ $? -ne 0 ]; then
    log "Error: Failed to create the FROZEN_DIR (${FROZEN_DIR})."
    exit 1
  fi

  if [[ -z ${LSIO_NON_ROOT_USER} ]]; then
    # chown download directory if currently not set to abc
    lsiown -R abc:abc \
      /$FROZEN_DIR
    log_debug "Setting owner of FROZEN_DIR (${FROZEN_DIR}) to abc:abc"
  fi
fi

init_checks

# Get Category path
CATEGORY_DIR=$(jq -r --arg category "$CATEGORY" '.[$category].save_path' "$CATEG_FILE")


spaces='                                                            '
CAT_display="${CATEGORY}${spaces}"
CAT_FZ_display="${CATEGORY_FZ}${spaces}"
CAT_DIR_display="${CATEGORY_DIR}${spaces}"
FRO_DIR_display="${FROZEN_DIR}${spaces}"
if [ -z "${CATEGORY_UMASK}" ]; then
    CAT_UMASK_display="unset${spaces}"
else
    CAT_UMASK_display="${CATEGORY_UMASK}${spaces}"
fi
echo "\
+---------------------------------------------------------+
|                     Freezetag mod loaded                |
+---------------------------------------------------------+
|  Download  category  : ${CAT_display::33}|
|  Frozen  category    : ${CAT_FZ_display::33}|
|  Category directory  : ${CAT_DIR_display::33}|
|  Frozen directory    : ${FRO_DIR_display::33}|
|  Category UMASK      : ${CAT_UMASK_display::33}|
+---------------------------------------------------------+
"

exec \
    s6-notifyoncheck -d -n 300 -w 1000 -c "mountpoint -q ${FROZEN_DIR}" \
        freezetag mount \
        --uid "${PUID}" \
        --gid "${PGID}" \
        "${CATEGORY_DIR}" \
        "${FROZEN_DIR}"